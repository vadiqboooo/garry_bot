from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from database import get_all_user, get_new_user,  get_phone_user

admin = Router()

LIST_ADMIN = [431589340, 43961092]

admin.message.filter((F.from_user.id.in_(LIST_ADMIN)))

async def send_alert(message: Message, contact = None):
    ADMIN_ID = LIST_ADMIN[0]

    if contact == None:
        message_text =  f"‚úÖ –ó–∞—à–µ–ª –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n"
        message_text += f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{message.from_user.username}\n"
        message_text += f"User ID: {message.from_user.id}"
    else:
        message_text =  f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω!\n"
        message_text += f"–ò–º—è: {contact.first_name}\n"
        message_text += f"–¢–µ–ª–µ—Ñ–æ–Ω: {contact.phone_number}\n"
        message_text += f"User ID: {contact.user_id}"
    
    for admin in LIST_ADMIN:
        await message.bot.send_message(chat_id = admin, 
                                   text=message_text)

class msg_state(StatesGroup):
    text = State()
    mailing_type = State()

@admin.message(Command('admin'))
async def admin_msg(message: Message):

    text = '''‚öôÔ∏è *–ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨* ‚öôÔ∏è
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üì§ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:

1. üì¢ /send_all - –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
2. üÜï /send_new - –ù–æ–≤—ã–º (–±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
3. üìû /send_phone - –¢–æ–ª—å–∫–æ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞–º–∏'''

    await message.answer(text)


@admin.message(Command('send_all'))
async def admin_send_all(message: Message, state: FSMContext):
    await state.update_data(mailing_type = 'all')
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º:')
    await state.set_state(msg_state.text)
    

@admin.message(Command('send_new'))
async def admin_send_new(message: Message, state: FSMContext):
    await state.update_data(mailing_type = 'new')
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, —Ç–µ–º –∫—Ç–æ –Ω–µ —É–∫–∞–∑–∞–ª —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω:')
    await state.set_state(msg_state.text)


@admin.message(Command('send_phone'))
async def admin_send_phone(message: Message, state: FSMContext):
    await state.update_data(mailing_type = 'phone')
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–º –∫—Ç–æ —É–∫–∞–∑–∞–ª —Ç–µ–ª–µ—Ñ–æ–Ω:')
    await state.set_state(msg_state.text)


@admin.message(msg_state.text)
async def send_message(message: Message, state: FSMContext):
    data = await state.get_data()  # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏
    mailing_type = data.get("mailing_type")
    text_to_send = message.text

    if mailing_type == 'all':
        users = await get_all_user()
    elif mailing_type == 'new':
        users = await get_new_user()
    elif mailing_type == 'phone':
        users = await get_phone_user()

    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @rancheasy")
        return

    user_ids = 0
    for user in users:
        try:
            await message.bot.send_message(chat_id=user.telegram_id,
                                       text = text_to_send)
            user_ids += 1
        except:
            ...
        
    await message.answer(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {user_ids}")
    await state.clear()